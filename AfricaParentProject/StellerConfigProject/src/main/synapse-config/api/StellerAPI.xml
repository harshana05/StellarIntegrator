<?xml version="1.0" encoding="UTF-8"?>
<api xmlns="http://ws.apache.org/ns/synapse"
     name="StellerAPI"
     context="/steller">
   <resource methods="POST" uri-template="/generateKeys">
      <inSequence>
         <log level="custom">
            <property name="InComing" value="Request Path"/>
         </log>
         <payloadFactory media-type="json">
            <format>{"method":"create_keys"}</format>
            <args/>
         </payloadFactory>
         <property name="ContentType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET" uri-template="/getStellerdFromBot?address={address}">
      <inSequence>
         <log level="custom">
            <property name="InComing" value="Request Path"/>
         </log>
         <property name="ContentType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerFriendBotEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET" uri-template="/accountInfo?address={address}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "account_info",
    "params": [
        {
            "account": "$1"
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.address')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="POST" uri-template="/payment?type={type}">
      <inSequence>
         <filter source="get-property('query.param.type')" regex="STR">
            <then>
               <payloadFactory media-type="json">
                  <format>
            {
  "method": "submit",
  "params": [
    {
      "secret": "$1",
      "tx_json": {
        "TransactionType": "Payment",
        "Account": "$2",
        "Destination": "$3",
        "Amount": "$4"
      }
    }
  ]
}
           </format>
                  <args>
                     <arg evaluator="json" expression="$.APIRequest.SourceSecret"/>
                     <arg evaluator="json" expression="$.APIRequest.SourceAcctId"/>
                     <arg evaluator="json" expression="$.APIRequest.DestinationAcctId"/>
                     <arg evaluator="json" expression="$.APIRequest.Amount"/>
                  </args>
               </payloadFactory>
            </then>
            <else>
               <payloadFactory media-type="json">
                  <format>
            {
  "method": "submit",
  "params": [
    {
      "secret": "$1",
      "tx_json": {
        "TransactionType": "Payment",
        "Account": "$2",
        "Destination": "$3",
        "Amount": {
          "currency": "$4",
          "value": "$5",
          "issuer": "$6"
        }
      }
    }
  ]
}
           </format>
                  <args>
                     <arg evaluator="json" expression="$.APIRequest.SourceSecret"/>
                     <arg evaluator="json" expression="$.APIRequest.SourceAcctId"/>
                     <arg evaluator="json" expression="$.APIRequest.DestinationAcctId"/>
                     <arg evaluator="json" expression="$.APIRequest.Amount.Currency"/>
                     <arg evaluator="json" expression="$.APIRequest.Amount.Value"/>
                     <arg evaluator="json" expression="$.APIRequest.Amount.IssuerId"/>
                  </args>
               </payloadFactory>
            </else>
         </filter>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET" uri-template="/trx?trxHash={trxHash}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "tx",
    "params": [
        {
            "transaction": "$1"
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.trxHash')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET"
             uri-template="/trx?trxHash={trxHash}&amp;ledgerIndex={ledgerIndex}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "transaction_entry",
    "params": [
        {
            "tx_hash": "$1",
            "ledger_index": $2
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.trxHash')"/>
               <arg evaluator="xml" expression="get-property('query.param.ledgerIndex')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET" uri-template="/trxHistory?startIndex={startIndex}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "tx_history",
    "params": [
        {
            "start": "$1"
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.startIndex')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET"
             uri-template="/accountTrx?accountId={accountId}&amp;limit={limit}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "account_tx",
    "params": [
        {
            "account": "$1",
            "limit": $2
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.accountId')"/>
               <arg evaluator="xml" expression="get-property('query.param.limit')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET" uri-template="/accountCurrencies?accountId={accountId}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "account_currencies",
    "params": [
        {
            "account": "$1"
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.accountId')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET" uri-template="/accountLines?accountId={accountId}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "account_lines",
    "params": [
        {
            "account": "$1"
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.accountId')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET" uri-template="/accountOffers?accountId={accountId}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "account_offers",
    "params": [
        {
            "account": "$1"
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.accountId')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="POST" uri-template="/bookOffer">
      <inSequence>
         <filter source="//APIRequest/takerGets/Currency" regex="STR">
            <then>
               <filter source="//APIRequest/takerPays/Currency" regex="STR">
                  <then>
                     <payloadFactory media-type="json">
                        <format>
            {
  "APIResponse": {
    "StatusCode": "100000",
    "Description": "Invalid Offer Type"
  }
}
           </format>
                        <args/>
                     </payloadFactory>
                     <property name="messageType"
                               value="application/json"
                               scope="axis2"
                               type="STRING"/>
                     <respond/>
                  </then>
                  <else>
                     <payloadFactory media-type="json">
                        <format>

            {
    "method": "book_offers",
    "params": [
        {
            "taker_gets": {
                "currency": "STR"
            },
            "taker_pays": {
                "issuer": "$1",
                "currency": "$2"
            }
        }
    ]
}

           </format>
                        <args>
                           <arg evaluator="xml" expression="//APIRequest/takerPays/Issuer"/>
                           <arg evaluator="xml" expression="//APIRequest/takerPays/Currency"/>
                        </args>
                     </payloadFactory>
                  </else>
               </filter>
            </then>
            <else>
               <filter source="//APIRequest/takerPays/Currency" regex="STR">
                  <then>
                     <payloadFactory media-type="json">
                        <format>

            {
    "method": "book_offers",
    "params": [
        {
            "taker_gets": {
                "currency": "$1",
                "issuer": "$2"
            },
            "taker_pays": {
                "currency": "STR"
            }
        }
    ]
}

           </format>
                        <args>
                           <arg evaluator="xml" expression="//APIRequest/takerGets/Currency"/>
                           <arg evaluator="xml" expression="//APIRequest/takerGets/Issuer"/>
                        </args>
                     </payloadFactory>
                  </then>
                  <else>
                     <payloadFactory media-type="json">
                        <format>

            {
    "method": "book_offers",
    "params": [
        {
            "taker_gets": {
                "currency": "$1",
                "issuer": "$2"
            },
            "taker_pays": {
                "issuer": "$3",
                "currency": "$4"
            }
        }
    ]
}

           </format>
                        <args>
                           <arg evaluator="xml" expression="//APIRequest/takerGets/Currency"/>
                           <arg evaluator="xml" expression="//APIRequest/takerGets/Issuer"/>
                           <arg evaluator="xml" expression="//APIRequest/takerPays/Issuer"/>
                           <arg evaluator="xml" expression="//APIRequest/takerPays/Currency"/>
                        </args>
                     </payloadFactory>
                  </else>
               </filter>
            </else>
         </filter>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="POST" uri-template="/lookupStaticPaths">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "static_path_find",
    "params": [
        {
            "source_account": "$1",
            "destination_account": "$2",
            "destination_amount": {
                "currency": "$3",
                "value": "$4",
                "issuer": "$5"
            }
        }
    ]
}
           </format>
            <args>
               <arg evaluator="json" expression="$.APIRequest.SourceAcctId"/>
               <arg evaluator="json" expression="$.APIRequest.DestinationAcctId"/>
               <arg evaluator="json" expression="$.APIRequest.DestinationAmount.Currency"/>
               <arg evaluator="json" expression="$.APIRequest.DestinationAmount.Value"/>
               <arg evaluator="json" expression="$.APIRequest.DestinationAmount.Issuer"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
</api>
