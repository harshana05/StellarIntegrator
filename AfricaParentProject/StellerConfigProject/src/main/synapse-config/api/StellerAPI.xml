<?xml version="1.0" encoding="UTF-8"?>
<api xmlns="http://ws.apache.org/ns/synapse"
     name="StellerAPI"
     context="/steller">
   <resource methods="POST" uri-template="/generateKeys">
      <inSequence>
         <log level="custom">
            <property name="InComing" value="Request Path"/>
         </log>
         <payloadFactory media-type="json">
            <format>{"method":"create_keys"}</format>
            <args/>
         </payloadFactory>
         <property name="ContentType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET" uri-template="/getStellerdFromBot?address={address}">
      <inSequence>
         <log level="custom">
            <property name="InComing" value="Request Path"/>
         </log>
         <property name="ContentType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerFriendBotEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET" uri-template="/accountInfo?address={address}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "account_info",
    "params": [
        {
            "account": "$1"
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.address')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="POST" uri-template="/payment?type={type}">
      <inSequence>
         <filter source="get-property('query.param.type')" regex="STR">
            <then>
               <payloadFactory media-type="json">
                  <format>
            {
  "method": "submit",
  "params": [
    {
      "secret": "$1",
      "tx_json": {
        "TransactionType": "Payment",
        "Account": "$2",
        "Destination": "$3",
        "Amount": "$4"
      }
    }
  ]
}
           </format>
                  <args>
                     <arg evaluator="json" expression="$.SourceSecret"/>
                     <arg evaluator="json" expression="$.SourceAcctId"/>
                     <arg evaluator="json" expression="$.DestinationAcctId"/>
                     <arg evaluator="json" expression="$.Amount"/>
                  </args>
               </payloadFactory>
            </then>
            <else>
               <payloadFactory media-type="json">
                  <format>
            {
  "method": "submit",
  "params": [
    {
      "secret": "$1",
      "tx_json": {
        "TransactionType": "Payment",
        "Account": "$2",
        "Destination": "$3",
        "Amount": {
          "currency": "$4",
          "value": "$5",
          "issuer": "$6"
        }
      }
    }
  ]
}
           </format>
                  <args>
                     <arg evaluator="json" expression="$.SourceSecret"/>
                     <arg evaluator="json" expression="$.SourceAcctId"/>
                     <arg evaluator="json" expression="$.DestinationAcctId"/>
                     <arg evaluator="json" expression="$.Amount.Currency"/>
                     <arg evaluator="json" expression="$.Amount.Value"/>
                     <arg evaluator="json" expression="$.Amount.IssuerId"/>
                  </args>
               </payloadFactory>
            </else>
         </filter>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET" uri-template="/trx?trxHash={trxHash}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "tx",
    "params": [
        {
            "transaction": "$1"
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.trxHash')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
   <resource methods="GET"
             uri-template="/trx?trxHash={trxHash}&amp;ledgerIndex={ledgerIndex}">
      <inSequence>
         <payloadFactory media-type="json">
            <format>
            {
    "method": "transaction_entry",
    "params": [
        {
            "tx_hash": "$1",
            "ledger_index": $2
        }
    ]
}
           </format>
            <args>
               <arg evaluator="xml" expression="get-property('query.param.trxHash')"/>
               <arg evaluator="xml" expression="get-property('query.param.ledgerIndex')"/>
            </args>
         </payloadFactory>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <property name="FORCE_HTTP_1.0" value="true" scope="axis2" type="STRING"/>
         <property name="DISABLE_CHUNKING"
                   value="true"
                   scope="axis2"
                   type="STRING"/>
         <send>
            <endpoint key="StellerTestEndpoint"/>
         </send>
      </inSequence>
      <outSequence>
         <property name="messageType"
                   value="application/json"
                   scope="axis2"
                   type="STRING"/>
         <log level="full"/>
         <send/>
      </outSequence>
      <faultSequence/>
   </resource>
</api>
